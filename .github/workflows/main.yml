# This is a basic workflow to help you get started with Actions


name: CI

on:
  push:
    tags:
      - '*'

jobs:
  deploy:
    runs-on: [ ubuntu-latest ]
    
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1 #this installs node and npm for us
        with:
          node-version: '12.x'

      - uses: actions/cache@v1 # this allows for re-using node_modules caching, making builds a bit faster.
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: NPM Install
        run: npm install
      - name: NPM Install Angular
        run: npm install -g @angular/cli > /dev/null
      - name: NPM build Angular Production
        run: ng build --prod
      - name: Delete Existing Files
        run : sudo sshpass -p ${{ secrets.SERVER_PASSWORD }} -v ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} 'rm -rf /var/www/lyro.fr/html/projects/magf/*'

      - name: Compress and Copy New Files to server
        run : |
              cd dist/
              tar -czvf ../../app.tar.gz ./
              cd ..
              cd ..
              sudo sshpass -p ${{ secrets.SERVER_PASSWORD }} scp -v -o StrictHostKeyChecking=no -r app.tar.gz ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }}:/var/www/lyro.fr/html/projects/magf
      - name: Uncompress new Files
        run : sudo sshpass -p ${{ secrets.SERVER_PASSWORD }} -v ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USERNAME }}@${{ secrets.SERVER_HOST }} 'cd /var/www/lyro.fr/html/projects/magf && tar -xzvf app.tar.gz && rm app.tar.gz && mv MitreAttackGroup/* . && rm -rRf MitreAttackGroup/'

